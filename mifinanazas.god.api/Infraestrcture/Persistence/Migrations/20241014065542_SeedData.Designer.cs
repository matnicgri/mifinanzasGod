// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mifinanazas.God.Persistence.Context;

#nullable disable

namespace Mifinanazas.God.Persistence.Migrations
{
    [DbContext(typeof(GodDbContext))]
    [Migration("20241014065542_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mifinanzas.God.Domain.Entitites.Game", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("dateInit")
                        .HasColumnType("datetime2");

                    b.Property<int>("player1Id")
                        .HasColumnType("int");

                    b.Property<int>("player2Id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("player1Id");

                    b.HasIndex("player2Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Mifinanzas.God.Domain.Entitites.MoveOptions", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("killId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("MoveOptions");
                });

            modelBuilder.Entity("Mifinanzas.God.Domain.Entitites.Movements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("MoveOptionId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("RoundId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("MoveOptionId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Movements");
                });

            modelBuilder.Entity("Mifinanzas.God.Domain.Entitites.Player", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Mifinanzas.God.Domain.Entitites.Totals", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("gameId")
                        .HasColumnType("int");

                    b.Property<int>("player1Id")
                        .HasColumnType("int");

                    b.Property<string>("player1Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("player1Total")
                        .HasColumnType("int");

                    b.Property<int>("player2Id")
                        .HasColumnType("int");

                    b.Property<string>("player2Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("player2Total")
                        .HasColumnType("int");

                    b.Property<int>("roundId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("gameId");

                    b.ToTable("Totals");
                });

            modelBuilder.Entity("Mifinanzas.God.Domain.Entitites.Game", b =>
                {
                    b.HasOne("Mifinanzas.God.Domain.Entitites.Player", null)
                        .WithMany()
                        .HasForeignKey("player1Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mifinanzas.God.Domain.Entitites.Player", null)
                        .WithMany()
                        .HasForeignKey("player2Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Mifinanzas.God.Domain.Entitites.Movements", b =>
                {
                    b.HasOne("Mifinanzas.God.Domain.Entitites.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mifinanzas.God.Domain.Entitites.MoveOptions", "MoveOptions")
                        .WithMany()
                        .HasForeignKey("MoveOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mifinanzas.God.Domain.Entitites.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("MoveOptions");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Mifinanzas.God.Domain.Entitites.Totals", b =>
                {
                    b.HasOne("Mifinanzas.God.Domain.Entitites.Game", "game")
                        .WithMany()
                        .HasForeignKey("gameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("game");
                });
#pragma warning restore 612, 618
        }
    }
}
